exit
@sh1
@sh
exit
Sku.where(:p_id=>params[:id])
params
exit
continue
puts i.maximum(:id)
puts i.id
puts i
<%if Product.exists?(:parent_id=>i)%>
<%if Product.exists?(:parent_id=>i.maximum(:id).to_s)%>
<%if Product.exists?(:parent_id=>i.maximum(:id))%>
<%if Product.exists?(:parent_id=>i.id)%>
<%if Product.exists?(:parent_id=>i)%>
@a
.id
puts i
i.class
exit
Sku.where(p_id:params[:id])
params
c
@cat1
c
@cat1
c
@cat1
@ch
puts i
exit
Sku.where(p_id:i)
@ch
$node.each{|i| puts i}
puts i
 @ch=Sku.where(p_id:i)
$node
@cat
@cat1
exit
: if Sku.where("value IS '#{@cat}'" AND "p_id IS '#{i}'").present?
: if Sku.exists?("value IS '#{@cat}'" AND "p_id IS '#{i}'")
: if Sku.exists?("value IS '#{@cat}' and p_id IS '#{i}'")
$node
@cat
exit
@a-@a1
@a1=@a.take(2)
@a=Sku.where("name IS 'Manufacturer Name'").group(:value)
@a=Sku.where("name IS 'Manufacturer Name'")
@a
exit
@a-@a1
@a1=@a.take(1)
@a=Sku.where("name IS 'Manufacturer Name'").select(:value).uniq
@a1=@a.take(3).uniq
@a1=@a.take(3)
@a=Sku.where("name IS 'Manufacturer Name'").uniq
@a=Sku.where("name IS 'Manufacturer Name'")
@man
(@man-@m).uniq
(@man+@m).uniq
@man+@m.uniq
@man+@m
@man-@m
@m
@man.class
@man
@product-@pro
@pro.class
@pro
@product.class
@product
exit
@q-@m
@m
@q=@man.to_a
@q
@q=@man.to_s
@man
exit
@m
@man
ss=@man.to_a
puts s
s
@m
@m.class
s.class
s-@m
s=@man.to_a
@man.to_a-@m
@man.to_a
@man
@man.class
@m.class
@man-@m
@m
@man
@man-@m
@man
@m
@man
exit
if Sku.where("value IS '#{@cat}' AND p_id IS '#{i}'").present?
if Sku.where("value IS '#{@cat}' and p_id IS '#{i}'").present?
if Sku.exists?("value IS '#{@cat}' and p_id IS '#{i}'")
@cat1
c
@cat
exit
 if Sku.exists?("value IS '#{@cat}' and p_id IS '{i}'")
@cat1
c
@cat
params
exit
params
@cat
$node
exit
params[:format]
@cat=Sku.where(:id=>params[:format]).maximum(:value)
puts i
@cat
Sku.exists?("value IS '#{@cat}' and p_id IS '{i}'")
@cat1
c
$node
c
$node
exit
$node
#node
Snode
exit
p=Sku.where("value IS '#{s}' and p_id IS '42'")
p=Sku.where("value IS '#{s}' and p_id IS '42')
p=Sku.where("value IS '#{s}' AND p_id IS '42' )
s=Sku.where(:id=>params[:format]).maximum(:value)
s=Sku.where(:id=>params[:format])
$node.each{|i| Product.where(:id=>i)}
$node
Sku.where(:id=>params[:format])
Sku.where(:id=>params[:id])
Sku.where(:id=>6471)
params
Sku.where(:value=>params[:value])
@cat
exit
@cat
exit
Sku.where(product_id:params[:id])
Sku.where(id:params[:id])
Sku.where(id:params[:product id])
Sku.where(id:params[:product_id])
Sku.where(id:params[:id])
params
params[:id]
params[:product_id]
params[:id]
@cat
exit
@cat
exit
$node
c
$node
exit
@in.uniq
@in
c
@in
exit
@in
exit
temp
@in=Sku.where(p_id:temp)
@result.push(@in).flatten
@result.push(@in).to_a
@result.push(@in)
@result<<@in
@in
@in=Sku.where(p_id:temp)
@in<<Sku.where(p_id:temp)
Sku.where(p_id:temp)
@in
c
temp
exit
puts i.to_s
puts i
c
puts i
@in
@result
c
puts i
exit
i.each{|j|j}
i=[1]
puts i
puts i+1
i.each{ |j| puts j+1}
puts i
c
@index
exit
@index
@index.map{|i| puts i}
@index.map{|i| puts i;byebug}
@index
exit
@index
a.each{|i| a<<i}
a
a.each{|i| a[i]}
a=[1]
@index=[Product.where(parent_id:params[:product_id]).map{|i| i.id}].flatten(1)
@index=[Product.where(parent_id:params[:product_id]).map{|i| i.id}]
@index=[Product.where(parent_id:params[:product_id]).map{|i| i.maximum(:id)}]
i.id
puts i.id
puts i
c
puts i.id
puts i
c
puts i
c
i.map{|j| puts j}
i.id
puts i
c
i.id
puts i
c
puts i
c
puts i
@index.flatten(1)
@index
exit
  @index=[Product.where(parent_id:params[:product_id]).select{|i| i.id                                              }].id
@index
c
exit
@index.each {|i| puts i}
@index.each {|i| Product.where(parent_id:i.maximum(:id)).present?}
@index.each {|i| Product.where(parent_id:i.id).present?}
c
Product.where(parent_id:i.id)
c
puts i
@index
